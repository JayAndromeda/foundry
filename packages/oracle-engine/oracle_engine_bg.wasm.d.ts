/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_handlingresponse_free(a: number): void;
export function __wbg_get_handlingresponse_timestamp(a: number): number;
export function __wbg_rangeresponse_free(a: number): void;
export function __wbg_get_rangeresponse_timestamp(a: number): number;
export function __wbg_reloadresponse_free(a: number): void;
export function __wbg_ammoresponse_free(a: number): void;
export function __wbg_get_ammoresponse_magSize(a: number): number;
export function __wbg_get_ammoresponse_reserveSize(a: number): number;
export function __wbg_get_ammoresponse_timestamp(a: number): number;
export function __wbg_dpsresponse_free(a: number): void;
export function __wbg_get_dpsresponse_totalTime(a: number): number;
export function __wbg_get_dpsresponse_totalShots(a: number): number;
export function dpsresponse_toJSON(a: number, b: number): void;
export function dpsresponse_timeDamageData(a: number): number;
export function dpsresponse_dpsPerMag(a: number): number;
export function __wbg_optimalkilldata_free(a: number): void;
export function __wbg_get_optimalkilldata_bodyshots(a: number): number;
export function __wbg_set_optimalkilldata_bodyshots(a: number, b: number): void;
export function __wbg_bodykilldata_free(a: number): void;
export function __wbg_get_bodykilldata_bodyshots(a: number): number;
export function __wbg_set_bodykilldata_bodyshots(a: number, b: number): void;
export function __wbg_get_bodykilldata_timeTaken(a: number): number;
export function __wbg_set_bodykilldata_timeTaken(a: number, b: number): void;
export function __wbg_resilliencesummary_free(a: number): void;
export function __wbg_get_resilliencesummary_resillienceValue(a: number): number;
export function __wbg_set_resilliencesummary_resillienceValue(a: number, b: number): void;
export function __wbg_get_resilliencesummary_bodyTtk(a: number): number;
export function __wbg_set_resilliencesummary_bodyTtk(a: number, b: number): void;
export function __wbg_get_resilliencesummary_optimalTtk(a: number): number;
export function __wbg_set_resilliencesummary_optimalTtk(a: number, b: number): void;
export function __wbg_firingresponse_free(a: number): void;
export function __wbg_get_firingresponse_pvpCritMult(a: number): number;
export function __wbg_get_firingresponse_pveImpactDamage(a: number): number;
export function __wbg_get_firingresponse_pveExplosionDamage(a: number): number;
export function __wbg_get_firingresponse_pveCritMult(a: number): number;
export function __wbg_get_firingresponse_burstDelay(a: number): number;
export function __wbg_get_firingresponse_innerBurstDelay(a: number): number;
export function __wbg_get_firingresponse_burstSize(a: number): number;
export function __wbg_get_firingresponse_timestamp(a: number): number;
export function __wbg_get_firingresponse_rpm(a: number): number;
export function __wbg_set_stat_baseValue(a: number, b: number): void;
export function __wbg_set_stat_partValue(a: number, b: number): void;
export function __wbg_set_stat_traitValue(a: number, b: number): void;
export function __wbg_metadata_free(a: number): void;
export function __wbg_get_metadata_apiVersion(a: number, b: number): void;
export function __wbg_get_metadata_apiTimestamp(a: number, b: number): void;
export function __wbg_get_metadata_apiGitCommit(a: number, b: number): void;
export function __wbg_get_metadata_apiGitBranch(a: number, b: number): void;
export function __wbg_scalarresponsesummary_free(a: number): void;
export function start(): void;
export function getMetadata(a: number): void;
export function stringifyWeapon(a: number): void;
export function setWeapon(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function getStats(a: number): void;
export function setStats(a: number, b: number): void;
export function addTrait(a: number, b: number, c: number, d: number): void;
export function resetTraits(a: number): void;
export function getTraitHashes(a: number): void;
export function setTraitValue(a: number, b: number): void;
export function getTraitOptions(a: number, b: number, c: number): void;
export function getWeaponRangeFalloff(a: number, b: number, c: number): void;
export function getWeaponHandlingTimes(a: number, b: number, c: number): void;
export function getWeaponReloadTimes(a: number, b: number, c: number): void;
export function getWeaponAmmoSizes(a: number, b: number, c: number): void;
export function getWeaponTtk(a: number, b: number): void;
export function getWeaponFiringData(a: number, b: number, c: number, d: number): void;
export function getWeaponFlinch(a: number, b: number, c: number, d: number): void;
export function getMiscData(a: number, b: number, c: number): void;
export function setEncounter(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function setLoggingLevel(a: number, b: number): void;
export function getModifierResponseSummary(a: number, b: number, c: number): void;
export function getScalarResponseSummary(a: number, b: number): void;
export function __wbg_stat_free(a: number): void;
export function __wbg_get_rangeresponse_hipFalloffStart(a: number): number;
export function __wbg_get_reloadresponse_reloadTime(a: number): number;
export function __wbg_get_handlingresponse_readyTime(a: number): number;
export function __wbg_get_optimalkilldata_timeTaken(a: number): number;
export function __wbg_get_dpsresponse_totalDamage(a: number): number;
export function __wbg_get_firingresponse_pvpImpactDamage(a: number): number;
export function __wbg_get_stat_baseValue(a: number): number;
export function __wbg_get_scalarresponsesummary_reloadScalar(a: number): number;
export function __wbg_set_optimalkilldata_timeTaken(a: number, b: number): void;
export function __wbg_get_rangeresponse_hipFalloffEnd(a: number): number;
export function __wbg_get_rangeresponse_adsFalloffStart(a: number): number;
export function __wbg_get_reloadresponse_ammoTime(a: number): number;
export function __wbg_get_handlingresponse_stowTime(a: number): number;
export function __wbg_get_reloadresponse_timestamp(a: number): number;
export function __wbg_get_optimalkilldata_headshots(a: number): number;
export function __wbg_get_firingresponse_pvpExplosionDamage(a: number): number;
export function __wbg_get_handlingresponse_adsTime(a: number): number;
export function __wbg_get_rangeresponse_adsFalloffEnd(a: number): number;
export function __wbg_get_rangeresponse_floorPercent(a: number): number;
export function __wbg_get_stat_partValue(a: number): number;
export function __wbg_get_stat_traitValue(a: number): number;
export function __wbg_get_scalarresponsesummary_drawScalar(a: number): number;
export function __wbg_get_scalarresponsesummary_adsScalar(a: number): number;
export function __wbg_get_scalarresponsesummary_stowScalar(a: number): number;
export function __wbg_get_scalarresponsesummary_globalRangeScalar(a: number): number;
export function __wbg_get_scalarresponsesummary_hipfireRangeScalar(a: number): number;
export function __wbg_get_scalarresponsesummary_adsRangeScalar(a: number): number;
export function __wbg_get_scalarresponsesummary_magSizeScalar(a: number): number;
export function __wbg_get_scalarresponsesummary_reserveSizeScalar(a: number): number;
export function __wbg_set_optimalkilldata_headshots(a: number, b: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_start(): void;
